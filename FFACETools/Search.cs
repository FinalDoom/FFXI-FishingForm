using System;

namespace FFACETools
{
    public partial class FFACE
    {
        /// <summary>
        /// Wrapper class for the search information returned from FFACE
        /// </summary>
        public class SearchTools
        {
            #region Constructor

            /// <summary>
            /// Constructor
            /// </summary>
            /// <param name="instanceID">Instance ID generated by FFACE</param>
            public SearchTools (int instanceID)
            {
                _InstanceID = instanceID;

            } // @ public SearchTools(int instanceID)

            #endregion

            #region Members

            /// <summary>
            /// Instance ID generated by FFACE
            /// </summary>
            private int _InstanceID { get; set; }

            /// <summary>
            /// The amount of results returned from teh search
            /// </summary>
            public int TotalCount
            {
                get { return GetSearchTotalCount(_InstanceID); }

            } // @ public int TotalCount

            /// <summary>
            /// Total amount lines shown in the search result (including breaks like "Want to Buy"
            /// </summary>
            public int PageCount
            {
                get { return (int)GetSearchPageCount(_InstanceID); }

            } // @ public byte PageCount

            #endregion

            #region Methods

            /// <summary>
            /// Zone the search result index is currently in
            /// </summary>
            /// <param name="index">Index of the search results to check</param>
            public Zone Zone (short index)
            {
                return GetSearchZone(_InstanceID, index);

            } // @ public byte Zone

            /// <summary>
            /// Main job of the search result index
            /// </summary>
            /// <param name="index">Index of the search results to check</param>
            public Job MainJob (short index)
            {
                return GetSearchMainJob(_InstanceID, index);

            } // @ public byte MainJob

            /// <summary>
            /// Sub job of the search result index
            /// </summary>
            /// <param name="index">Index of the search results to check</param>
            public Job SubJob (short index)
            {
                return GetSearchSubJob(_InstanceID, index);

            } // @ public byte SubJob

            /// <summary>
            /// Main level of the search result index
            /// </summary>
            /// <param name="index">Index of the search results to check</param>
            public byte MainLvl (short index)
            {
                return GetSearchMainlvl(_InstanceID, index);

            } // @ public byte MainLvl

            /// <summary>
            /// Main level of the search result index
            /// </summary>
            /// <param name="index">Index of the search results to check</param>
            public byte SubLvl (short index)
            {
                return GetSearchSublvl(_InstanceID, index);

            } // @ public byte MainLvl

            /// <summary>
            /// Name of person in the search result
            /// </summary>
            /// <param name="index">Index of the search results to look for</param>
            public string Name (short index)
            {
                int size = 2000;
                byte[] buffer = new byte[size];
                GetSearchName(_InstanceID, index, buffer, ref size);

                return System.Text.Encoding.GetEncoding(1252).GetString(buffer, 0, size - 1);

            } // @ public bool Name

            #endregion

        } // @ public class Search
    } // @ public partial class FFACE
}
